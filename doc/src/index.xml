<?xml version="1.0" encoding="UTF-8"?>
<document>

  <properties>
    <author email="john@jbrugge.com">John Brugge</author>
    <title>Glean : Gathering feedback from your code</title>
  </properties>

<body>

<section name="About">
<p>
Glean is a framework of Ant scripts for generating feedback on a team's source code.
Glean's goal is to make it possible to add feedback to your build cycle
with as little pain as possible.
The results of the scripts
are HTML that you can deploy to a project website or some other common team area.
Add it at the end of a daily build cycle and it is a quick way to keep a number 
of feedback sources up to date and in one place.
</p><p>
There are any number of feedback tools that have Ant tasks, but applying them
individually to your project build script usually involves copying some boilerplate
Ant target from the tool's documentation and tweaking it a little for your project.
Of course, even that doesn't help when you move on to the
next project, other than now having a new place to copy and paste from. And as you find
more areas where another feedback tool would help, it adds an organizing challenge to the
build script maintainer to figure out where to put the script for this new tool.
</p><p>
Glean is a collection of these boilerplate Ant targets, tied together with some
common properties that describe your source project.
The goal is to give you flexibility in a couple of different directions: to let 
you plug in different tools that analyze, document or measure your code, and 
to let you apply those tools to any source project you have. 
</p><p>
The core package includes scripts for a set of open-source tools
that provide a wide range of code analysis, documentation and metrics. 
When you want to expand on that, there are a number of other scripts you can 
add for such areas as test code coverage, UML generation or database documentation.
And if you have a tool you use that isn't here, the instructions on adding it to
Glean show you how to drop that one in.
</p>
</section>

<section name="Getting Started">
<p>
<a href="./download.html">Download</a> and unpack the distribution anywhere you would like.
The pre-requisites for running the basic scripts are a basic Ant setup.
<ul>
<li>Java JDK 1.4</li>
<li>Ant 1.6.5</li>
</ul>
Many of the other tools may have their own dependencies. Those scripted by Glean
are listed on the <a href="./tools.html">tools</a> page.
</p><p>
Running Glean involves telling it where your project is and what tools you want
to run. The defaults will give you some of the staple feedback for a basic component
project. Invoking it is then straightforward, from either command line, or another
Ant script, or a build system like CruiseControl.
<pre>
    cd /path/to/glean
    ant -Dfeedback.properties=sample/config/sample.feedback.properties
</pre>
This will run all of the tools in the basic setup. The results
will be simple HTML
files, along with a summary page. From a browser, open the file
<code>/path/to/glean/sample/SampleProject/glean/index.html</code>. The summary
should look something like this.
</p>
<p>
See the <a href="./using.html">documentation</a> page for more complete
instructions. Several types of project setups are shown on the 
<a href="./samples.html">samples</a> page.
</p>
</section>

</body>
</document>