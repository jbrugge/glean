<?xml version="1.0" encoding="UTF-8"?>
<document>

  <properties>
    <author email="john@jbrugge.com">John Brugge</author>
    <title>Glean : Documentation</title>
  </properties>

<body>
<section name="Using Glean">
<p>Glean needs to know only a few things to do most of its work:</p>
<ul>
<li>the location of the project files (source, binary and
libraries, if any)</li>
<li>which feedback tools to run</li>
</ul>
<p>Being Ant scripts, all of the config is done using properties, and the easiest
way to override properties for a project is usually to put them in a properties file.
To tell Glean about your project, then, copy the <code>sample/sample.feedback.properties</code>
file to any place you like and edit it.
</p>
<p>
After saving it, you run Glean by pointing it at that file
<pre>
cd /path/to/glean
ant -Dfeedback.properties=/path/to/myfeedback.properties
</pre>
The output will be in your project's folder, under a <code>glean</code> folder
(the default location), or wherever you may have defined it in your properties file.
Browse to the <code>index.html</code> and you should see a summary page with links
to each of the reports.
</p>
</section>
<section name="Publishing The Results">
<p>
The results will, by default, be generated as subdirectories
under <code>myproject/glean</code>, one subdirectory per tool. 
The Glean script will also package all of them up as a WAR
that can be deployed to a simple servlet engine. You could also simply
copy the files to a documentation area of a simple web server to be
served up for your team.
</p>
</section>
<section name="Configuration">
<p>The basic use of Glean assumes a simple project structure like above, but
many other structures can be handled by adjusting properties that are used. The
key properties are in the file <code>feedback.properties</code>. 
Overriding their values follows the rules of Ant property overrides, so you can
change the defaults without having to edit the main <code>feedback.properties</code>. 
</p>
<p>
Glean will look for properties files at a number of different levels.
Here is a list of places where you can make changes, in order of when they are
read.
<ul>
  <li>properties specified on the command-line with
<code>-Dproperty=value</code></li>
  <li>properties from file specified by
<code>-Dfeedback.properties=my.project.properties</code> - settings specific to
myproject. 
<span class="emphasis">This is the preferred place to put your project settings</span>
  </li>
  <li><code>myproject/feedback.properties.local</code> - general settings for
Glean unique to <code>myproject</code> and a particular local install</li>
  <li><code>myproject/feedback.properties</code> - general settings for Glean
unique to <code>myproject</code></li>
  <li><code>${glean.home}/tool/(tool dir)/tool.properties.local</code> - settings
specific to this tool for this installation</li>
  <li><code>${glean.home}/tool/(tool.dir)/tool.properties</code> - settings
specific to this tool</li>
  <li><code>${glean.home}/feedback.properties.local</code> - general settings for
Glean unique to a particular local install</li>
  <li><code>${glean.home}/feedback.properties</code> - general settings for Glean</li>
</ul>
</p>
</section>
<section name="Selecting Tools To Use">
<p>The <code>report.pattern</code> property determines which tools are run.
It's value is a
standard Ant glob pattern. You can either use "*" to mean all tools, or
you can list them individually, separated by commas. The default
pattern is to run a small subset of the tools available.
</p>
<p>
If you were mostly interested in documentation, for example, you might define
these reports.
</p>
<pre>tool.pattern=beandoc,doccheck,javadoc,java2html</pre>
</section>
<section name="Changing the report look">
<p>Many of the reports use a stylesheet called <code>reports.css</code>. Change this
in any way that
you want. It is based on a number of styles from the standard
stylesheets that come with Ant.
</p>
</section>
</body>
</document>
